{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAHIL THAKUR\\\\OneDrive\\\\Desktop\\\\_as'\\\\prototype\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const questions = [{\n    text: \"Question 1\",\n    options: [\"opt1\", \"opt2\", \"opt3\", \"opt4\"]\n  }, {\n    text: \"Question 2\",\n    options: [\"opt1\", \"opt2\", \"opt3\", \"opt4\"]\n  }\n  // Add more questions as needed\n  ];\n  const handleOptionChange = (questionIndex, option) => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionIndex]: option\n    });\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          responses: selectedOptions\n        })\n      });\n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(error);\n      }\n      alert('Your responses have been submitted!');\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert('Failed to submit your responses. Please try again.');\n    }\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentQuestion.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${currentQuestionIndex}`,\n          value: option,\n          onChange: () => handleOptionChange(currentQuestionIndex, option),\n          checked: selectedOptions[currentQuestionIndex] === option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), currentQuestionIndex < questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleNextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), currentQuestionIndex === questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"QJHIXX4fl4/NBEjLHEWWmarQfTo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","questions","text","options","handleOptionChange","questionIndex","option","handleNextQuestion","length","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responses","ok","error","Error","alert","console","currentQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","type","name","value","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SAHIL THAKUR/OneDrive/Desktop/_as'/prototype/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Quiz() {\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [selectedOptions, setSelectedOptions] = useState({});\r\n    \r\n    const questions = [\r\n        {\r\n            text: \"Question 1\",\r\n            options: [\"opt1\", \"opt2\", \"opt3\", \"opt4\"]\r\n        },\r\n        {\r\n            text: \"Question 2\",\r\n            options: [\"opt1\", \"opt2\", \"opt3\", \"opt4\"]\r\n        },\r\n        // Add more questions as needed\r\n    ];\r\n\r\n    const handleOptionChange = (questionIndex, option) => {\r\n        setSelectedOptions({\r\n            ...selectedOptions,\r\n            [questionIndex]: option\r\n        });\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:3000/submit', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ responses: selectedOptions }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const error = await response.text();\r\n                throw new Error(error);\r\n            }\r\n\r\n            alert('Your responses have been submitted!');\r\n        } catch (error) {\r\n            console.error('Submission error:', error);\r\n            alert('Failed to submit your responses. Please try again.');\r\n        }\r\n    };\r\n\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quiz</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <p>{currentQuestion.text}</p>\r\n                {currentQuestion.options.map((option) => (\r\n                    <label key={option}>\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question-${currentQuestionIndex}`} \r\n                            value={option} \r\n                            onChange={() => handleOptionChange(currentQuestionIndex, option)}\r\n                            checked={selectedOptions[currentQuestionIndex] === option}\r\n                        />\r\n                        {option}\r\n                    </label>\r\n                ))}\r\n                <br></br>\r\n                {currentQuestionIndex < questions.length - 1 && (\r\n                    <button type=\"button\" onClick={handleNextQuestion}>Next Question</button>\r\n                )}\r\n                {currentQuestionIndex === questions.length - 1 && (\r\n                    <button type=\"submit\">Submit</button>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}