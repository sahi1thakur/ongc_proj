{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAHIL THAKUR\\\\OneDrive\\\\Desktop\\\\_as'\\\\prototype\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz({\n  username\n}) {\n  _s();\n  // 'username' is received as a prop\n  const [selectedOption, setSelectedOption] = useState('');\n  const question = {\n    text: \"Question\",\n    options: [\"opt1\", \"opt2\", \"opt3\", \"opt4\"]\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: question.text,\n          selectedOption,\n          username\n        })\n      });\n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(error);\n      }\n      alert('Your response has been submitted!');\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert('Failed to submit your response. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"question\",\n          value: option,\n          onChange: e => setSelectedOption(e.target.value),\n          checked: selectedOption === option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"+aYHZE0a/835MlUfESRBJSmwxHw=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","username","_s","selectedOption","setSelectedOption","question","text","options","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","error","Error","alert","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","option","type","name","value","onChange","e","target","checked","_c","$RefreshReg$"],"sources":["C:/Users/SAHIL THAKUR/OneDrive/Desktop/_as'/prototype/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Quiz({ username }) { // 'username' is received as a prop\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n\r\n    const question = {\r\n        text: \"Question\",\r\n        options: [\"opt1\", \"opt2\", \"opt3\", \"opt4\"]\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:3000/submit', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ question: question.text, selectedOption, username }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const error = await response.text();\r\n                throw new Error(error);\r\n            }\r\n\r\n            alert('Your response has been submitted!');\r\n        } catch (error) {\r\n            console.error('Submission error:', error);\r\n            alert('Failed to submit your response. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quiz</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <p>{question.text}</p>\r\n                {question.options.map((option) => (\r\n                    <label key={option}>\r\n                        <input \r\n                            type=\"radio\" \r\n                            name=\"question\" \r\n                            value={option} \r\n                            onChange={(e) => setSelectedOption(e.target.value)}\r\n                            checked={selectedOption === option}\r\n                        />\r\n                        {option}\r\n                    </label>\r\n                ))}<br></br>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAAE;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMQ,QAAQ,GAAG;IACbC,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;EAC5C,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ,QAAQ,EAAEA,QAAQ,CAACC,IAAI;UAAEH,cAAc;UAAEF;QAAS,CAAC;MAC9E,CAAC,CAAC;MAEF,IAAI,CAACU,QAAQ,CAACO,EAAE,EAAE;QACd,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACL,IAAI,CAAC,CAAC;QACnC,MAAM,IAAIc,KAAK,CAACD,KAAK,CAAC;MAC1B;MAEAE,KAAK,CAAC,mCAAmC,CAAC;IAC9C,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZG,OAAO,CAACH,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCE,KAAK,CAAC,mDAAmD,CAAC;IAC9D;EACJ,CAAC;EAED,oBACItB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACb5B,OAAA;MAAM6B,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBACzBxB,OAAA;QAAAwB,QAAA,EAAIlB,QAAQ,CAACC;MAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBtB,QAAQ,CAACE,OAAO,CAACsB,GAAG,CAAEC,MAAM,iBACzB/B,OAAA;QAAAwB,QAAA,gBACIxB,OAAA;UACIgC,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEH,MAAO;UACdI,QAAQ,EAAGC,CAAC,IAAK/B,iBAAiB,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACnDI,OAAO,EAAElC,cAAc,KAAK2B;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,EACDG,MAAM;MAAA,GARCA,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASX,CACV,CAAC,eAAC5B,OAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACZ5B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACzB,EAAA,CApDQF,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAsDb,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}