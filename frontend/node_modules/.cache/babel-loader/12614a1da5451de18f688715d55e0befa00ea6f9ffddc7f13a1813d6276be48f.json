{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAHIL THAKUR\\\\OneDrive\\\\Desktop\\\\_as'\\\\prototype\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [responses, setResponses] = useState({});\n  const questions = [{\n    id: 1,\n    question: 'What is the capital of France?',\n    options: ['Berlin', 'Madrid', 'Paris', 'Lisbon']\n  }, {\n    id: 2,\n    question: 'What is 2 + 2?',\n    options: ['3', '4', '5', '6']\n  }];\n  const handleOptionChange = (questionId, answer) => {\n    setResponses(prevResponses => ({\n      ...prevResponses,\n      [questionId]: answer\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Here you would send 'responses' to your database\n    console.log('Submitted responses:', responses);\n    // Add your database submission code here\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), q.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${q.id}`,\n          value: option,\n          onChange: () => handleOptionChange(q.id, option),\n          checked: responses[q.id] === option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), option]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))]\n    }, q.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"p+LtuSuoZ5ZrfQiq0O4NAZmwL9s=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","_s","responses","setResponses","questions","id","question","options","handleOptionChange","questionId","answer","prevResponses","handleSubmit","event","preventDefault","console","log","onSubmit","children","map","q","fileName","_jsxFileName","lineNumber","columnNumber","option","i","type","name","value","onChange","checked","_c","$RefreshReg$"],"sources":["C:/Users/SAHIL THAKUR/OneDrive/Desktop/_as'/prototype/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Quiz() {\r\n    const [responses, setResponses] = useState({});\r\n\r\n    const questions = [\r\n        {\r\n            id: 1,\r\n            question: 'What is the capital of France?',\r\n            options: ['Berlin', 'Madrid', 'Paris', 'Lisbon'],\r\n        },\r\n        {\r\n            id: 2,\r\n            question: 'What is 2 + 2?',\r\n            options: ['3', '4', '5', '6'],\r\n        }\r\n    ];\r\n\r\n    const handleOptionChange = (questionId, answer) => {\r\n        setResponses(prevResponses => ({\r\n            ...prevResponses,\r\n            [questionId]: answer\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Here you would send 'responses' to your database\r\n        console.log('Submitted responses:', responses);\r\n        // Add your database submission code here\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {questions.map((q) => (\r\n                <div key={q.id}>\r\n                    <h2>{q.question}</h2>\r\n                    {q.options.map((option, i) => (\r\n                        <label key={i}>\r\n                            <input \r\n                                type=\"radio\" \r\n                                name={`question-${q.id}`} \r\n                                value={option} \r\n                                onChange={() => handleOptionChange(q.id, option)}\r\n                                checked={responses[q.id] === option}\r\n                            />\r\n                            {option}\r\n                        </label>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <button type=\"submit\">Submit Quiz</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMO,SAAS,GAAG,CACd;IACIC,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAE,gCAAgC;IAC1CC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ;EACnD,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAE,gBAAgB;IAC1BC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAChC,CAAC,CACJ;EAED,MAAMC,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;IAC/CP,YAAY,CAACQ,aAAa,KAAK;MAC3B,GAAGA,aAAa;MAChB,CAACF,UAAU,GAAGC;IAClB,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEd,SAAS,CAAC;IAC9C;EACJ,CAAC;EAED,oBACIH,OAAA;IAAMkB,QAAQ,EAAEL,YAAa;IAAAM,QAAA,GACxBd,SAAS,CAACe,GAAG,CAAEC,CAAC,iBACbrB,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAAmB,QAAA,EAAKE,CAAC,CAACd;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACpBJ,CAAC,CAACb,OAAO,CAACY,GAAG,CAAC,CAACM,MAAM,EAAEC,CAAC,kBACrB3B,OAAA;QAAAmB,QAAA,gBACInB,OAAA;UACI4B,IAAI,EAAC,OAAO;UACZC,IAAI,EAAE,YAAYR,CAAC,CAACf,EAAE,EAAG;UACzBwB,KAAK,EAAEJ,MAAO;UACdK,QAAQ,EAAEA,CAAA,KAAMtB,kBAAkB,CAACY,CAAC,CAACf,EAAE,EAAEoB,MAAM,CAAE;UACjDM,OAAO,EAAE7B,SAAS,CAACkB,CAAC,CAACf,EAAE,CAAC,KAAKoB;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,EACDC,MAAM;MAAA,GARCC,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASN,CACV,CAAC;IAAA,GAbIJ,CAAC,CAACf,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcT,CACR,CAAC,eACFzB,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf;AAACvB,EAAA,CApDQD,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAsDb,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}