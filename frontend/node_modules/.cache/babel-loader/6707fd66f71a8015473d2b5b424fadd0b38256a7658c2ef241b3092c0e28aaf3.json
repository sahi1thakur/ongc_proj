{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAHIL THAKUR\\\\OneDrive\\\\Desktop\\\\_as'\\\\prototype\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport LoginForm from './components/LoginForm'; // Adjust the path as necessary\nimport NewPage from './components/Quiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const handleLogin = async (username, password) => {\n    try {\n      // Make sure to include the full URL with the correct port number\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Login successful\n        console.log('Login successful:', data);\n        navigate('/Quiz');\n        // Handle redirection or state updates as needed\n        // For example, you might want to set the user state here\n      } else {\n        // Login failed\n        console.error('Login failed:', data.message);\n        // Handle error messages or state updates as needed\n      }\n    } catch (error) {\n      // Network or other error\n      console.error('Error:', error);\n      // Handle error messages or state updates as needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","LoginForm","NewPage","jsxDEV","_jsxDEV","App","handleLogin","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","navigate","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/SAHIL THAKUR/OneDrive/Desktop/_as'/prototype/frontend/src/App.js"],"sourcesContent":["\n\nimport React from 'react';\nimport LoginForm from './components/LoginForm'; // Adjust the path as necessary\nimport NewPage from './components/Quiz';\n\nconst App = () => {\n  const handleLogin = async (username, password) => {\n    try {\n      // Make sure to include the full URL with the correct port number\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        // Login successful\n        console.log('Login successful:', data);\n        navigate('/Quiz');\n        // Handle redirection or state updates as needed\n        // For example, you might want to set the user state here\n      } else {\n        // Login failed\n        console.error('Login failed:', data.message);\n        // Handle error messages or state updates as needed\n      }\n    } catch (error) {\n      // Network or other error\n      console.error('Error:', error);\n      // Handle error messages or state updates as needed\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n      <LoginForm onLogin={handleLogin} />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAChD,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAChD,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf;QACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,IAAI,CAAC;QACtCK,QAAQ,CAAC,OAAO,CAAC;QACjB;QACA;MACF,CAAC,MAAM;QACL;QACAF,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEN,IAAI,CAACO,OAAO,CAAC;QAC5C;MACF;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACd;MACAH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B;IACF;EACF,CAAC;EAED,oBACElB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBxB,OAAA,CAACH,SAAS;MAAC4B,OAAO,EAAEvB;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACE,EAAA,GAtCIzB,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}